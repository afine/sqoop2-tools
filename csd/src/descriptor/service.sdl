// Licensed to Cloudera, Inc. under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  Cloudera, Inc. licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
{
  "name" : "SQOOP2_BETA",
  "label" : "Sqoop 2 beta",
  "description" : "Sqoop is a tool designed for efficiently transferring bulk data between Apache Hadoop and structured datastores such as relational databases. <span class=\"error\">Before adding this service, ensure that the Sqoop 2 beta parcel is installed and activated.</span>",
  "version" : "0.1.0-SNAPSHOT",

  "compatibility" : {
    "generation": 1,
    "cdhVersion" : { "min" : "5", "max" : "5" }
  },

  "runAs" : {
    "user" : "sqoop2",
    "group" : "sqoop2"
  },

  "icon" : "images/sqoop2.png",

  "parcel" : {
    "repoUrl" : "http://archive.cloudera.com/sqoop2beta/parcels/latest/",
    "requiredTags" : [ "cdh", "sqoop2_beta" ]
  },

  "serviceDependencies" : [
    { "name": "YARN", "required" : "true"}
  ],

  "serviceInit" : {
    "preStartSteps" : [
      {
        "commandName" : "repository_upgrade"
      }
    ]
  },

  "kerberos" : "${org.apache.sqoop.security.authentication.type}",

  "parameters" : [
    {
      "name" : "cm.sqoop.database.type",
      "label" : "Database",
      "description" : "Database that Sqoop should use for repository",
      "type" : "string_enum",
      "default": "Derby",
      "validValues": [ "Derby", "MySQL", "PostgreSQL" ],
      "configurableInWizard" : true
    },
    {
      "name" : "cm.sqoop.database.hostname",
      "label" : "Database Hostname",
      "description" : "Hostname with database that Sqoop will use for it's repository.",
      "type" : "string",
      "default": "/var/lib/sqoop2/repository/db;create=true",
      "configurableInWizard" : true
    },
    {
      "name" : "org.apache.sqoop.repository.jdbc.user",
      "label" : "Database Username",
      "description" : "Username with database that Sqoop will use for it's repository.",
      "type" : "string",
      "default": "sa",
      "configurableInWizard" : true
    },
    {
      "name" : "org.apache.sqoop.repository.jdbc.password",
      "label" : "Database Password",
      "description" : "Password with database that Sqoop will use for it's repository.",
      "type" : "password",
      "default": "",
      "configurableInWizard" : true
    },
    {
      "name" : "org.apache.sqoop.jetty.port",
      "label" : "Sqoop 2 server port",
      "description" : "Port where Sqoop 2 service will run.",
      "type" : "port",
      "default": 12000
    },
    {
      "name" : "org.apache.sqoop.repository.schema.immutable",
      "label" : "Repository structure immutable",
      "description" : "When set to true, then Sqoop won't change the repository structures during boot up. Upgrades to repository structures can be explicitly requested by calling appropriate command on the service.",
      "type" : "boolean",
      "default": "true"
    },
    {
      "name" : "org.apache.sqoop.connector.autoupgrade",
      "label" : "Auto upgrade connector",
      "description" : "When set to false, then Sqoop won't change automaticaly ugrade the connector structures during boot up. Upgrade can be explicitly requested by calling appropriate command on the service.",
      "type" : "boolean",
      "default": "false"
    },
    {
      "name" : "org.apache.sqoop.driver.autoupgrade",
      "label" : "Auto upgrade drive",
      "description" : "When set to false, then Sqoop won't change automaticaly ugrade the driver structures during boot up. Upgrade can be explicitly requested by calling appropriate command on the service.",
      "type" : "boolean",
      "default": "false"
    },
    {
      "name" : "org.apache.sqoop.repository.provider",
      "label" : "Repository provider",
      "description" : "Repository provider to use",
      "type" : "string",
      "default": "org.apache.sqoop.repository.JdbcRepositoryProvider"
    },
    {
      "name" : "org.apache.sqoop.submission.engine",
      "label" : "Submission engine",
      "description" : "Class that will sqoop use for submission engine.",
      "type" : "string",
      "default": "org.apache.sqoop.submission.mapreduce.MapreduceSubmissionEngine"
    },
    {
      "name" : "org.apache.sqoop.execution.engine",
      "label" : "Execution engine",
      "description" : "Class that will sqoop use for execution engine.",
      "type" : "string",
      "default": "org.apache.sqoop.execution.mapreduce.MapreduceExecutionEngine"
    },
    {
      "name" : "org.apache.sqoop.repository.jdbc.transaction.isolation",
      "label" : "Transaction isolation",
      "description" : "Transaction isolation level that will be used while talking to Sqoop repository. This doesn't affect connections that are transferring data.",
      "type" : "string",
      "default": "READ_COMMITTED"
    },
    {
      "name" : "org.apache.sqoop.repository.jdbc.maximum.connections",
      "label" : "Connection pool size",
      "description" : "Size of connection pool for communicating with repository database. This doesn't affect connections that are transferring data.",
      "type" : "long",
      "default": 10
    },
    {
      "name" : "org.apache.sqoop.security.authentication.type",
      "label" : "Authentication Type",
      "description" : "Authentication type for Sqoop 2 server. Can either be \"simple\" or \"kerberos\".",
      "required" : "true",
      "type" : "string_enum",
      "validValues": ["SIMPLE", "KERBEROS"],
      "default" : "SIMPLE",
      "configurableInWizard" : true
    },
    {
      "name" : "cm.sqoop.classpath.extra",
      "label" : "Extra classpath",
      "description" : "All jars from this directory will be added to Sqoop 2 server classpath.",
      "type" : "string",
      "default": "/var/lib/sqoop2/"
    }
  ],

  "commands" : [
    {
      "name" : "repository_upgrade",
      "label" : "Upgrade repository metadata",
      "description" : "Will initialize or upgrade Sqoop 2 repository metadata (structures and data).",
      "roleName" : "SQOOP2_SERVER",
      "roleCommand" : "repository_upgrade",
      "runMode" : "single"
    }
  ],

  "roles" : [
  {
    "name" : "SQOOP2_SERVER",
    "label" : "Sqoop 2 Server",
    "pluralLabel" : "Sqoop 2 Servers",

    "startRunner" : {
      "program" : "scripts/control.sh",
      "args" : [ "server" ],
      "environmentVariables" : {
        "SQOOP_SERVER_EXTRA_LIB" : "${cm.sqoop.classpath.extra}",
        "CM_SQOOP_DATABASE_TYPE" : "${cm.sqoop.database.type}",
        "CM_SQOOP_DATABASE_HOSTNAME" : "${cm.sqoop.database.hostname}",
        "AUTHENTICATION_TYPE" : "${org.apache.sqoop.security.authentication.type}"
      }
    },

    "kerberosPrincipals" : [
      {
        "name" : "sqoop_principal",
        "primary" : "SQOOP",
        "instance" : "${host}"
      },
      {
        "name" : "http_principal",
        "primary" : "HTTP",
        "instance" : "${host}"
      }
    ],

    "logging" : {
      "dir" : "/var/log/sqoop2",
      "filename" : "server.log",
      "modifiable" : true,
      "configName" : "sqoop.log4j.dir",
      "loggingType" : "log4j"
    },

    "configWriter" : {
      "generators" : [
        {
          "filename" : "sqoop.properties",
          "configFormat" : "properties",
          "includedParams" : [
            "org.apache.sqoop.jetty.port",
            "org.apache.sqoop.repository.schema.immutable",
            "org.apache.sqoop.connector.autoupgrade",
            "org.apache.sqoop.driver.autoupgrade",
            "org.apache.sqoop.repository.provider",
            "org.apache.sqoop.submission.engine",
            "org.apache.sqoop.execution.engine",
            "org.apache.sqoop.repository.jdbc.transaction.isolation",
            "org.apache.sqoop.repository.jdbc.maximum.connections",
            "org.apache.sqoop.security.authentication.type"
          ],
          "kerberosPrincipals" : [
            {
              "principalName" : "sqoop_principal",
              "propertyName" : "org.apache.sqoop.security.authentication.kerberos.principal"
            },
            {
              "principalName" : "http_principal",
              "propertyName" : "org.apache.sqoop.security.authentication.kerberos.http.principal"
            }
          ]
        }
      ]
    },

    "commands" : [
      {
        "name" : "repository_upgrade",
        "label" : "Upgrade repository metadata",
        "description" : "Will initialize or upgrade Sqoop 2 repository metadata (structures and data).",
        "expectedExitCodes" : [0],
        "requiredRoleState" : "stopped",
        "commandRunner" : {
          "program" : "scripts/control.sh",
          "args" : ["upgrade"],
          "environmentVariables" : {
            "SQOOP_SERVER_EXTRA_LIB" : "${cm.sqoop.classpath.extra}",
            "CM_SQOOP_DATABASE_TYPE" : "${cm.sqoop.database.type}",
            "CM_SQOOP_DATABASE_HOSTNAME" : "${cm.sqoop.database.hostname}",
            "AUTHENTICATION_TYPE" : "${org.apache.sqoop.security.authentication.type}"
          }
        }
      }
    ]
  }
  ]
}
